.bg {
  background-color: var(--bg);
  height: 100%;
  min-height: 100vh;
  color: var(--text);
}

.header {
  height: 90px;
  border-bottom: 1px solid var(--bgSoft);
  width: 100%;
}

@media screen and (max-width: 768px) {
  .header {
    height: 110px;
  }
}

.headerTitle {
  color: var(--text);
  font-size: 1.5rem;
  font-weight: 600;
  margin-top: 10px;
  letter-spacing: -0.02em;
  font-family: var(--font-heading);
}

.subTitle {
  color: var(--textSoft);
  font-size: 0.875rem;
  line-height: 1.5;
}

.wrapper {
  gap: 24px;
  width: 100%;
}

.tabList {
  background-color: var(--white-color);
  display: flex;
  gap: 28px;
  height: fit-content;
  margin-top: 20px;
  align-items: center;
  border-bottom: 2px solid var(--bgSoft);
}

.tabListItem {
  display: flex;
  align-items: center;
  gap: 8px;
  border-radius: 2px;
  cursor: pointer;
  font-family: 'Inter', sans-serif;
  color: var(--textSoft);
  padding: 12px 24px;

  & svg path {
    fill: var(--text-gray-color-dark);
  }

  & span {
    font-size: 15px;
    font-weight: 500;
    letter-spacing: 0.05rem;
    color: var(--text-gray-color-dark);
  }
}

.tabListItem:hover {
  color: var(--textSoftDark);
}

.tabListItem[data-state='active'] {
  color: var(--text);
  border-bottom: 2px solid var(--border);

  & svg path {
    fill: var(--white-color);
  }

  & span {
    color: var(--white-color);
  }
}

.tabContent {
  padding: 0;
}

.instanceCardWrapper {
  background-color: var(--bgSoftDark);
  border-radius: 10px;
  text-align: left;
}

.searchInput {
  width: 30%;
  height: 40px;
  background-color: var(--bgSoft);
  border: 1px solid var(--textSoftDark);
  border-radius: 7px;
  color: var(--text);
  font-size: 14px;
  transition: all 0.2s ease;
}

.searchInput:focus {
  outline: none;
  border-color: var(--border);
  background-color: var(--bgSoft);
}

.searchInput::placeholder {
  color: var(--textSoftDark);
}

.searchContainer {
  flex: 1;
  max-width: 400px;
  position: relative;
}

.searchContainer::before {
  content: '';
  position: absolute;
  left: 16px;
  top: 50%;
  transform: translateY(-50%);
  width: 16px;
  height: 16px;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23666' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='11' cy='11' r='8'%3E%3C/circle%3E%3Cline x1='21' y1='21' x2='16.65' y2='16.65'%3E%3C/line%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-size: contain;
  pointer-events: none;
}

.iconSlot {
  color: #6b7280;
}

.refreshButton {
  background-color: var(--bgSoft);
  border: 1px solid var(--textSoftDark);
  border-radius: 7px;
  height: 40px;
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 0 16px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.refreshButton:hover {
  background-color: var(--button);
  border-color: var(--border);
}

.deployButton {
  border: 2px solid var(--bgSoft);
  background-color: var(--button);
  color: var(--soft);
  border-radius: 7px;
  height: 40px;
  padding: 0 16px;
  font-weight: 700;
  cursor: pointer;
  transition: all 0.2s ease;
}

.deployButton:hover {
  background-color: var(--button);
}

.emptyStateContainer {
  background-color: transparent;
  border-top: 1px solid var(--textSoftDark);
  padding-top: 40px;
}

.instanceTitle {
  font-size: 1.5rem;
  line-height: 2rem;
  color: var(--text);
}

.instanceContent {
  color: var(--textSoftDark);
}

.tableContainer {
  position: relative;
  width: 100%;
}

.tableLoadingOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 10;
  border-radius: 8px;
}

.loadingSpinner {
  width: 30px;
  height: 30px;
  border: 3px solid var(--textSoftDark);
  border-radius: 50%;
  border-top-color: var(--text);
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

.historyTable {
  width: 100%;
  table-layout: fixed;
}

.historyTableHeader {
  border-bottom: 1px solid var(--textSoftDark);
}

.historyTableCell {
  color: var(--textSoftDark);
  height: 50px; /* Fixed height for table cells */
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 0.875rem;
  padding: 0.75rem 1rem;
}

/* Add this style for the history instance name */
.historyInstanceName {
  font-weight: 500;
  color: var(--text-primary);
}

.statusBadge {
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  font-weight: 500;
}

.statusActive {
  background-color: rgba(16, 185, 129, 0.2);
  color: #10b981;
}

.statusDeleted {
  background-color: rgba(239, 68, 68, 0.2);
  color: #ef4444;
}

.statusPending {
  background-color: rgba(245, 158, 11, 0.2);
  color: #f59e0b;
}

.statusError {
  background-color: rgba(239, 68, 68, 0.2);
  color: #ef4444;
}

.statusHibernated {
  background-color: #e0e7ff;
  color: #3730a3;
}

.statusDefault {
  background-color: rgba(107, 114, 128, 0.2);
  color: #6b7280;
}

.statusSpinner {
  width: 12px;
  height: 12px;
  border: 2px solid rgba(245, 158, 11, 0.3);
  border-top-color: #f59e0b;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  display: inline-block;
  margin-right: 4px;
}

.instanceNameLink {
  display: flex;
  align-items: center;
  gap: 4px;
  color: #2563eb;
  text-decoration: none;
  transition: color 0.2s ease;
}

.instanceNameLink:hover {
  color: #1d4ed8;
  text-decoration: underline;
}

.networkLink {
  color: #6b7280;
  margin-left: 0.5rem;
  transition: all 0.2s;
}

.networkLink:hover {
  color: #2563eb;
}

.consoleLink {
  display: flex;
  align-items: center;
  color: var(--primary-color);
  font-weight: 500;
  text-decoration: none;
  transition: color 0.2s ease;
}

.consoleLink:hover {
  color: var(--primary-color-dark);
  text-decoration: underline;
}

.actionSelect {
  width: 140px;
}

.processingIndicator {
  position: absolute;
  top: 0;
  right: -30px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.processingSpinner {
  width: 16px;
  height: 16px;
  border: 2px solid var(--textSoftDark);
  border-radius: 50%;
  border-top-color: var(--text);
  animation: spin 1s linear infinite;
}

.loadingContainer,
.errorContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem;
  background-color: var(--bgSoftDark);
  border-radius: 10px;
  margin-top: 2rem;
  width: 100%;
}

.loadingText,
.errorText {
  color: var(--textSoft);
  font-size: 1rem;
}

.errorText {
  color: var(--error-color);
  margin-bottom: 1rem;
}

.retryButton {
  background-color: var(--button);
  cursor: pointer;
  border: 2px solid var(--border);
  font-size: 14px;
  border-radius: 7px;
  height: 36px;
  padding: 0 16px;
}

.retryButton:hover {
  background-color: var(--border);
}

.dialogOverlay {
  background-color: rgba(0, 0, 0, 0.5);
  position: fixed;
  inset: 0;
  animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
  z-index: 50;
}

.dialogContent {
  background-color: var(--bgSoftDark);
  border-radius: 8px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90vw;
  max-width: 450px;
  max-height: 85vh;
  padding: 25px;
  animation: contentShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
  z-index: 51;
}

.modalTitle {
  margin: 0;
  font-weight: 600;
  color: var(--text);
  font-size: 1.25rem;
}

.modalDescription {
  margin-top: 10px;
  margin-bottom: 20px;
  color: var(--textSoft);
  font-size: 0.9rem;
  line-height: 1.5;
}

.cancelButton {
  background-color: var(--bgSoft);
  border: 1px solid var(--textSoftDark);
  color: var(--text);
  padding: 8px 16px;
  border-radius: 6px;
  font-size: 14px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.cancelButton:hover {
  background-color: var(--bgSoft);
  border-color: var(--textSoft);
}

.deleteButton {
  background-color: rgba(239, 68, 68, 0.2);
  border: 1px solid var(--error-color, #ef4444);
  color: var(--error-color, #ef4444);
  padding: 8px 16px;
  border-radius: 6px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.deleteButton:hover {
  background-color: rgba(239, 68, 68, 0.3);
}

.balanceContainer {
  display: flex;
  align-items: center;
  gap: 8px;
  background-color: var(--bgSoft);
  border: 1px solid var(--textSoftDark);
  border-radius: 7px;
  height: 40px;
  padding: 0 16px;
  color: var(--text);
  transition: all 0.2s ease;
  position: relative;
}

.balanceContainer:hover {
  border-color: var(--border);
}

.balanceAmount {
  font-weight: 600;
  font-size: 14px;
  color: var(--text);
}

.balanceLoading {
  font-size: 14px;
  color: var(--textSoft);
  font-style: italic;
}

.balanceSpinner {
  width: 16px;
  height: 16px;
  border: 2px solid var(--textSoftDark);
  border-radius: 50%;
  border-top-color: var(--text);
  animation: spin 1s linear infinite;
  margin: 0 auto;
}

/* Add animation for balance updates */
@keyframes balancePulse {
  0% {
    background-color: var(--bgSoft);
  }
  50% {
    background-color: rgba(153, 69, 252, 0.2);
  }
  100% {
    background-color: var(--bgSoft);
  }
}

.balanceUpdated {
  animation: balancePulse 1s ease;
}

.instanceButton {
  background-color: var(--button);
  cursor: pointer;
  border: 2px solid var(--border);
  font-size: 16px;
  text-align: center;
  max-width: 100%;
  min-width: 100px;
  font-size: 14px;
  border-radius: 7px;
  height: 40px;
}

.instanceButton:hover {
  background-color: var(--border);
}

.actionButton {
  background-color: var(--bgSoft);
  border: 1px solid var(--textSoftDark);
  border-radius: 4px;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
}

.actionButton:hover {
  background-color: var(--button);
  border-color: var(--border);
}

.actionButtonDelete {
  background-color: var(--bgSoft);
  border: 1px solid var(--error-color);
  border-radius: 4px;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
}

.actionButtonDelete:hover {
  background-color: rgba(239, 68, 68, 0.2);
  border-color: var(--error-color);
}

.actionDropdownContainer {
  display: flex;
  flex-direction: column;
  background-color: #fff;
  border: 1px solid #e5e7eb;
  border-radius: 6px;
  overflow: hidden;
  width: 140px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.actionButtonGroup {
  display: flex;
  flex-direction: column;
}

.actionDivider {
  height: 1px;
  background-color: #e5e7eb;
  margin: 4px 0;
}

.emptyRow {
  background-color: var(--bgSoftDark);
}

.emptyCell {
  height: 50px; /* Match the height of regular cells */
  border-bottom: 1px solid var(--bgSoft);
}

/* Updated pagination styles */
.paginationContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 16px;
  border-top: 1px solid var(--bgSoft);
  background-color: var(--bgSoftDark);
}

.paginationControls {
  margin: 0 auto; /* Center the pagination controls */
}

.paginationInfo {
  font-size: 14px;
  color: var(--textSoft);
}

.paginationControls {
  display: flex;
  align-items: center;
  gap: 8px;
}

.paginationButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  border-radius: 4px;
  background-color: var(--bgSoft);
  border: 1px solid var(--textSoftDark);
  color: var(--text);
  cursor: pointer;
  transition: all 0.2s ease;
}

.paginationButton:hover:not(:disabled) {
  background-color: var(--button);
  border-color: var(--border);
}

.paginationButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.paginationPages {
  display: flex;
  gap: 4px;
}

.paginationPageButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  border-radius: 4px;
  background-color: var(--bgSoft);
  border: 1px solid var(--textSoftDark);
  color: var(--text);
  font-size: 14px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.paginationPageButton:hover {
  background-color: var(--button);
  border-color: var(--border);
}

.paginationPageButtonActive {
  background-color: var(--button);
  border-color: var(--border);
  color: var(--soft);
}

/* Make sure we have the spin animation defined */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes overlayShow {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes contentShow {
  from {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}
